#!/usr/bin/env ruby
require_relative "../lib/studio_game/player.rb"
require_relative "../lib/studio_game/game.rb"
require_relative "../lib/studio_game/clumsy_player.rb"
require_relative "../lib/studio_game/berserker_player.rb"


# class Games
#     attr_reader :name, :players

#     def initialize():
#         @title = title
#         @game = games
# end

# number_rolled = rand(1..6)
# player_1 = Player.new("Player1", 60)

# puts number_rolled
# if number_rolled < 3 
#     player_1.drain
#     puts player_1.name + " got drained 😩"
# elsif number_rolled < 5
#     puts player_1.name + " got skipped"
# else
#     player_1.boost
#     puts player_1.name + " got boosted 😁"
# end

# player_1 = Player.new("Player1", 60)
# player_2 = Player.new("Player2",  30)
# player_3 = Player.new("Player3")
# player_4 = Player.new("Player4", 45)

# players = [player_1, player_2, player_3, player_4]

players_file = File.join(__dir__, "players.csv")
game = StudioGame::Game.new("MGuardians")
game.load(ARGV.shift || players_file)

clumsy_player = StudioGame::ClumsyPlayer.new("klutz", 105)
berserk_player = StudioGame::BerserkPlayer.new("berserker", 50)
game.add_player(clumsy_player)
game.add_player(berserk_player)
# game.players = players

loop do
    print "How many games? ('quit' or 'exit' to exit)"
    answer = gets.chomp.downcase
    case answer 
    when /^\d+$/
        game.play(answer.to_i)
        puts "Enjoy your #{answer} games..."
    when "quit", "exit"
        game.print_stats
        break
    else 
        puts "Please enter a number or 'quit', 'exit'"
    end

end 

game.save


puts game.players







# game = Game.new("My Game")
# game.add_player(player_1)
# game.add_player(player_2)
# game.add_player(player_3)
# game.add_player(player_4)
# game.play


# game2 = Game.new("Chipmunks")

# alvin = Player.new("Alvin", 50)
# simon = Player.new("Simon", 100)
# theodore = Player.new("Theodore")

# game2.add_player(alvin)
# game2.add_player(simon)
# game2.add_player(theodore)
# game2.play







# # number_rolled = rand(1..6)
# # puts number_rolled
# player1 = Player.new("Player #1", health = 20)
# # puts player1


# player2 = Player.new("Player #2")
# # puts player2
# # puts player2.health
# # puts player2.name

# player3 = Player.new("Player #3", health = 0)
# player4 = Player.new("Player #4", health = 100)
# player5 = Player.new("Cole", health = 75)
# # puts player3
# # puts player3.health
# # player3.name = "new Player #3"
# # puts player3.name
# # puts player3.score

# players = [player1, player2, player3, player4]
# players.pop
# players.push(player5)
# puts "before playing"
# puts players


# players.each do |player|
#     number_rolled = rand(1..6)
#     puts number_rolled
#     case number_rolled 
#     when 1..2
#         player.drain()
#         puts "#{player.name} got drained"
#     when 3..4
#         puts "#{player.name} got skipped"
#     else
#         player.boost()
#         puts "#{player.name} got boosted"
#     end
# end

# puts "\nafter playing"
# puts players











